<layout-base webc:nokeep>
    <template @html="content" webc:nokeep></template>
</layout-base>

<style>
    /* 响应式布局容器 */
    .post-container {
        display: flex;
        min-height: 100vh;
        column-gap: calc(2 * var(--spacing-xl));
    }

    .post-container article {
        flex: 1;
        box-sizing: border-box;
        margin-bottom: var(--spacing-2xl);
    }

    /* 移动端：单列布局 */
    @media (max-width: 768px) {
        .post-container {
            flex-direction: column;
        }

        .post-main {
            flex: 1;
            order: 2;
        }

        .mobile-toc {
            order: 1;
        }

        .post-toc {
            display: none;
        }

        /* Hide desktop meta on mobile */
        .post-meta.desktop-meta {
            display: none;
        }
    }

    /* 中等屏幕：两列布局 */
    @media (min-width: 768px) and (max-width: 1200px) {
        .post-container {
            flex-direction: row;
            max-width: 1200px;
            margin: 0 auto;
        }

        .mobile-toc {
            display: none;
        }

        .post-main {
            flex: 1;
        }

        .post-toc {
            max-width: var(--sidebar-max-width);
            flex-shrink: 0;
        }

        /* Show desktop meta in sidebar on medium screens too */
        .post-meta.mobile-meta {
            display: none;
        }

        .post-meta.desktop-meta {
            margin-bottom: 1.5rem;
        }
    }

    /* 大屏幕：三列布局（左侧导航 + 中间内容 + 右侧目录）*/
    @media (min-width: 1200px) {
        .post-container {
            flex-direction: row;
            padding: 2rem 0;
            padding-top: 0;
        }

        .mobile-toc {
            display: none;
        }

        .post-main {
            flex: 1;
        }

        .post-toc {
            max-width: var(--sidebar-max-width);
            flex-shrink: 0;
        }

        /* Hide mobile meta on desktop */
        .post-meta.mobile-meta {
            display: none;
        }

        /* Desktop meta positioning in sidebar */
        .post-meta.desktop-meta {
            margin-bottom: 1.5rem;
        }
    }

    .post-title-container {
        margin-bottom: var(--spacing-xl);
        padding-bottom: var(--spacing-md);
        border-bottom: 2px solid var(--color-border-light);
    }

    .post-title {
        color: var(--color-text-primary);
        font-size: var(--font-size-3xl);
        margin-bottom: var(--spacing-md);
        font-weight: bold;
        line-height: 1.2;
    }

    .post-pdf-download {
        margin-bottom: var(--spacing-md);
    }

    .pdf-download-link {
        display: inline-flex;
        align-items: center;
        gap: var(--spacing-xs);
        color: var(--color-primary);
        text-decoration: none;
        font-size: var(--font-size-md);
        font-weight: 500;
        padding: var(--spacing-xs) var(--spacing-sm);
        border: 1px solid var(--color-primary);
        border-radius: var(--radius-small);
        transition: var(--transition-fast);
        background: transparent;
    }

    .pdf-download-link:hover {
        background: var(--color-primary);
        color: white;
        text-decoration: none;
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .post-meta {
        color: var(--color-text-muted);
        font-size: var(--font-size-md);
        font-style: italic;
    }

    .post-meta a {
        color: var(--color-primary);
        text-decoration: none;
        margin-right: var(--spacing-sm);
    }

    .post-meta a:hover {
        text-decoration: underline;
    }

    .post-content {
        font-size: var(--font-size-base);
        line-height: 1.75;
        font-family: var(--font-family-serif);
        text-align: justify;
        hyphens: auto;
    }

    .post-content>.post-section>p:first-child::first-letter {
        -webkit-initial-letter: 2;
        initial-letter: 2;
        margin-right: 0.1em;
    }

    /* 目录样式 */
    .post-toc {
        position: sticky;
        top: 2rem;
        height: fit-content;
        max-height: calc(100vh - 4rem);
        overflow-y: auto;
    }

    .toc-container {
        padding: 0;
    }

    .toc-container h3 {
        margin: 0 0 var(--spacing-md) 0;
        font-size: var(--font-size-lg);
        font-weight: 600;
        color: var(--color-text-primary);
    }

    .toc-nav ul,
    .toc-nav .toc-list {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .toc-nav li,
    .toc-nav .toc-item {
        margin: 0.25rem 0;
    }

    .toc-nav .toc-item {
        padding-left: calc(1rem * var(--depth, 0));
    }

    .toc-nav a {
        display: block;
        padding: var(--spacing-xs) var(--spacing-sm);
        color: var(--color-text-muted);
        text-decoration: none;
        font-size: var(--font-size-md);
        line-height: 1.4;
        transition: var(--transition-fast);
        position: relative;
        border-left: 3px solid transparent;
    }

    .toc-nav a:hover {
        color: var(--color-primary);
        background-color: var(--color-primary-light);
    }

    /* 激活状态：添加右位移动画效果 */
    .toc-nav [data-active="current"] a {
        color: var(--color-primary);
        border-left: 3px solid var(--color-primary);
    }

    .toc-nav [data-active="parent"] a {
        color: var(--color-primary);
    }

    /* 嵌套目录缩进 */
    .toc-nav ul ul {
        margin-left: 1rem;
    }

    .toc-nav ul ul a {
        font-size: 0.85rem;
        opacity: 0.9;
    }

    /* 折叠功能样式 */
    .toc-nav .toc-item {
        transition: all 0.3s ease;
        overflow: hidden;
    }

    .toc-nav .toc-item.collapsed {
        height: 0;
        margin: 0;
    }

    /* 移动端目录 */
    .mobile-toc {
        margin-bottom: 2rem;
    }

    .mobile-toc details {
        padding: 0;
    }

    .mobile-toc summary {
        font-weight: 600;
        color: var(--color-text-primary);
        cursor: pointer;
        user-select: none;
        list-style: none;
    }

    .mobile-toc summary::-webkit-details-marker {
        display: none;
    }

    .mobile-toc-nav {
        margin-top: 1rem;
    }

    .mobile-toc-nav ul,
    .mobile-toc-nav .toc-list {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .mobile-toc-nav li,
    .mobile-toc-nav .toc-item {
        margin: 0.5rem 0;
    }

    .mobile-toc-nav .toc-item {
        padding-left: calc(1rem * var(--depth, 0));
    }

    .mobile-toc-nav a {
        color: var(--color-text-muted);
        text-decoration: none;
        font-size: var(--font-size-md);
        line-height: 1.4;
    }

    .mobile-toc-nav a:hover {
        color: var(--color-primary);
        text-decoration: underline;
    }

    /* 保持原有的内容样式 */
    .post-content h2 {
        color: var(--color-text-primary);
        margin: var(--spacing-md) 0 var(--spacing-md) 0;
        font-size: var(--font-size-lg);
        font-family: var(--font-family-sans);
        font-weight: 700;
    }

    .post-content h3 {
        color: var(--color-text-secondary);
        margin: var(--spacing-md) 0 var(--spacing-sm) 0;
        font-size: var(--font-size-base);
        font-family: var(--font-family-sans);
        font-weight: 600;
    }

    .post-content p {
        margin-bottom: var(--spacing-md);
    }

    .post-content a {
        text-decoration: underline;
    }

    .post-content a:hover {
        color: var(--color-primary-hover);
    }

    .post-content code {
        background-color: var(--color-bg-white);
        padding: var(--spacing-xs) var(--spacing-sm);
        border-radius: var(--radius-small);
        font-family: 'Monaco', 'Consolas', monospace;
        font-size: var(--font-size-md);
        box-shadow: var(--shadow-light);
        border: 1px solid var(--color-border-light);
    }

    .post-content pre {
        background-color: var(--color-bg-white);
        padding: var(--spacing-lg);
        border-radius: var(--radius-medium);
        overflow-x: auto;
        margin: var(--spacing-lg) 0;
        border-left: 4px solid var(--color-primary);
        box-shadow: var(--shadow-light);
        border: 1px solid var(--color-border-light);
    }

    .post-content pre code {
        background: none;
        padding: 0;
        box-shadow: none;
        border: none;
    }

    .post-content blockquote {
        border-left: 4px solid var(--color-primary);
        margin: var(--spacing-lg) 0;
        font-style: italic;
        color: var(--color-text-subtle);
        background: var(--color-bg-white);
        padding: var(--spacing-lg) var(--spacing-lg) var(--spacing-lg) var(--spacing-xl);
        border-radius: var(--radius-medium);
        box-shadow: var(--shadow-light);
        border: 1px solid var(--color-border-light);
        border-left: 4px solid var(--color-primary);
    }

    .post-content ul,
    .post-content ol {
        margin-left: 1em;
        margin-bottom: var(--spacing-md);
    }

    .post-content li {
        margin-bottom: var(--spacing-sm);
    }

    @media (max-width: 768px) {
        .post-title {
            font-size: var(--font-size-3xl);
        }

        .post-content {
            font-size: var(--font-size-base);
        }

        .post-content h2 {
            font-size: var(--font-size-lg);
        }

        .post-content h3 {
            font-size: var(--font-size-xl);
        }
    }

    /* Environment 环境样式 */
    .environment.accent-frame {
        margin: var(--spacing-lg) 0;
        border-left: 4px solid var(--color-text-muted);
        padding: var(--spacing-sm) 0 var(--spacing-sm) var(--spacing-md);
    }

    .environment-header {
        margin-bottom: var(--spacing-sm);
    }

    .environment-header.inlined {
        display: inline-block;
    }

    .environment-kind {
        display: inline-block;
        font-weight: 600;
        color: var(--color-text-muted);
        margin-right: var(--spacing-sm);
    }

    .environment-title {
        display: inline-block;
        color: var(--color-text-primary);
        margin-right: var(--spacing-sm);
    }

    .environment-body {
        display: inline;
    }

    .environment-body p:first-child {
        display: inline;
    }

    .environment-body p:last-child {
        margin-bottom: 0;
    }

    /* Typst element 样式 */
    img {
        max-width: 100%;
        object-fit: contain;
    }

    .typst-figure {
        display: block;
        margin: 0 auto;
        max-width: 100%;
        height: auto;
        text-align: center;
    }

    .typst-figure figcaption {
        font-size: var(--font-size-sm);
        color: var(--color-text-muted);
        margin-top: var(--spacing-xs);
    }

    .typst-block-math {
        position: relative;
        justify-content: center;
        align-items: center;
        display: flex;
        margin: var(--spacing-md) 0;
    }

    .equation-numbering {
        position: absolute;
        right: 0;
        padding-left: 1rem;
    }


    .heading-anchor {
        color: var(--color-text-primary);
        text-decoration: none !important;
    }

    .heading-anchor:hover {
        color: var(--color-text-primary) !important;
        text-decoration: underline !important;
    }

    .heading-anchor:hover::before {
        content: '#';
        margin-left: -.8em;
        padding-right: .8em;
        color: var(--color-text-muted);
        position: absolute;
    }

    .light-mode {
        display: var(--present-on-light);
    }

    .dark-mode {
        display: var(--present-on-dark);
    }
</style>

<link rel="stylesheet" href="../styles/mathyml.css">

<script webc:bucket="defer">
    // 初始化目录导航功能
    const sections = document.querySelectorAll('.post-section[aria-labelledby]');
    const tocItems = document.querySelectorAll('.toc-nav .toc-item'); // 只选择桌面版目录
    const visibleSections = new Set();

    // 获取项目的深度
    const getDepth = (item) => parseInt(item.style.getPropertyValue('--depth') || '0');

    // 处理目录激活状态和折叠状态
    const updateTocStates = () => {
        const activeItems = []; // 收集有 data-active 属性的项目

        // 重置状态并设置激活状态
        for (let i = 0; i < tocItems.length; i++) {
            const item = tocItems[i];
            item.classList.toggle('collapsed', getDepth(item) > 0);
            item.removeAttribute('data-active');

            const id = item.children[0].getAttribute('href').substring(1);
            if (visibleSections.has(id)) {
                item.setAttribute('data-active', 'current');
                activeItems.push({ item, index: i });
                const currentDepth = getDepth(item);

                // 标记父节点
                let lastDepth = currentDepth;
                for (let j = i - 1; j >= 0; j--) {
                    const itemDepth = getDepth(tocItems[j]);
                    if (itemDepth < lastDepth) {
                        tocItems[j].setAttribute('data-active', 'parent');
                        activeItems.push({ item: tocItems[j], index: j });
                        lastDepth = itemDepth;
                    }
                }
            }
        }

        // 展开收集到的活跃项目的直接子级
        for (const { item, index } of activeItems) {
            const currentDepth = getDepth(item);
            for (let j = index + 1; j < tocItems.length; j++) {
                const nextItem = tocItems[j];
                const nextDepth = getDepth(nextItem);
                if (nextDepth <= currentDepth) break;
                if (nextDepth === currentDepth + 1) {
                    nextItem.classList.remove('collapsed');
                }
            }
        }
    };

    // 观察器
    const observer = new IntersectionObserver((entries) => {
        for (const entry of entries) {
            const headingId = entry.target.getAttribute('aria-labelledby');
            entry.isIntersecting ? visibleSections.add(headingId) : visibleSections.delete(headingId);
        }
        updateTocStates();
    }, {
        threshold: 0,
    });

    // 启动
    sections.forEach(section => observer.observe(section));
</script>