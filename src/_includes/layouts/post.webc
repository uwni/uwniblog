<layout-base webc:nokeep>
    <!-- Typst生成的内容已包含完整布局，这里直接输出 -->
    <template @html="content" webc:nokeep></template>
</layout-base>

<style>
    /* 响应式布局容器 */
    .post-layout {
        display: grid;
        gap: 2rem;
        min-height: 100vh;
        /* 为固定header留空间 */
    }

    /* 移动端：单列布局 */
    @media (max-width: 767px) {
        .post-layout {
            grid-template-columns: 1fr;
            grid-template-areas:
                "mobile-toc"
                "content";
            padding: 1rem;
        }

        .mobile-toc {
            grid-area: mobile-toc;
        }

        .post-main {
            grid-area: content;
        }

        .post-toc {
            display: none;
        }

        /* Hide desktop meta on mobile */
        .post-meta.desktop-meta {
            display: none;
        }
    }

    /* 中等屏幕：两列布局 */
    @media (min-width: 768px) and (max-width: 1199px) {
        .post-layout {
            grid-template-columns: 1fr 280px;
            grid-template-areas: "content toc";
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .mobile-toc {
            display: none;
        }

        .post-main {
            grid-area: content;
        }

        .post-toc {
            grid-area: toc;
        }

        /* Show desktop meta in sidebar on medium screens too */
        .post-meta.mobile-meta {
            display: none;
        }

        .post-meta.desktop-meta {
            margin-bottom: 1.5rem;
        }
    }

    /* 大屏幕：三列布局（左侧导航 + 中间内容 + 右侧目录）*/
    @media (min-width: 1200px) {
        .post-layout {
            grid-template-columns: 1fr 280px;
            grid-template-areas: "content toc";
            padding: 2rem 0;
            padding-top: 0;
            /* 大屏幕无固定header */
            gap: 2rem;
        }

        .mobile-toc {
            display: none;
        }

        .post-main {
            grid-area: content;
        }

        .post-toc {
            grid-area: toc;
        }

        /* Hide mobile meta on desktop */
        .post-meta.mobile-meta {
            display: none;
        }

        /* Desktop meta positioning in sidebar */
        .post-meta.desktop-meta {
            margin-bottom: 1.5rem;
        }
    }

    /* 文章主体样式 */
    .post {
        margin-bottom: var(--spacing-2xl);
    }

    .post-title-container {
        margin-bottom: var(--spacing-xl);
        padding-bottom: var(--spacing-md);
        border-bottom: 2px solid var(--color-border-light);
    }

    .post-title {
        color: var(--color-text-primary);
        font-size: var(--font-size-4xl);
        margin-bottom: var(--spacing-md);
        font-weight: 400;
        line-height: 1.2;
    }

    .post-meta {
        color: var(--color-text-muted);
        font-size: var(--font-size-md);
        font-style: italic;
    }

    .post-meta a {
        color: var(--color-primary);
        text-decoration: none;
        margin-right: var(--spacing-sm);
    }

    .post-meta a:hover {
        text-decoration: underline;
    }

    .post-content {
        font-size: 1.1rem;
        line-height: 1.8;
    }

    /* 目录样式 */
    .post-toc {
        position: sticky;
        top: 2rem;
        height: fit-content;
        max-height: calc(100vh - 4rem);
        overflow-y: auto;
    }

    .toc-container {
        padding: 0;
    }

    .toc-container h3 {
        margin: 0 0 var(--spacing-md) 0;
        font-size: var(--font-size-lg);
        font-weight: 600;
        color: var(--color-text-primary);
    }

    .toc-nav ul,
    .toc-nav .toc-list {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .toc-nav li,
    .toc-nav .toc-item {
        margin: 0.25rem 0;
    }

    .toc-nav .toc-item {
        padding-left: calc(1rem * var(--depth, 0));
    }

    .toc-nav a {
        display: block;
        padding: var(--spacing-xs) var(--spacing-sm);
        color: var(--color-text-muted);
        text-decoration: none;
        font-size: var(--font-size-md);
        line-height: 1.4;
        transition: var(--transition-fast);
        position: relative;
    }

    .toc-nav a:hover {
        color: var(--color-primary);
        background-color: var(--color-primary-light);
    }

    /* 激活状态：添加右位移动画效果 */
    .toc-nav [data-active="current"] a {
        color: var(--color-primary);
        border-left: 3px solid var(--color-primary);
    }

    .toc-nav [data-active="parent"] a {
        color: var(--color-primary);
    }

    /* 嵌套目录缩进 */
    .toc-nav ul ul {
        margin-left: 1rem;
    }

    .toc-nav ul ul a {
        font-size: 0.85rem;
        opacity: 0.9;
    }

    /* 移动端目录 */
    .mobile-toc {
        margin-bottom: 2rem;
    }

    .mobile-toc details {
        padding: 0;
    }

    .mobile-toc summary {
        font-weight: 600;
        color: var(--color-text-primary);
        cursor: pointer;
        user-select: none;
        list-style: none;
    }

    .mobile-toc summary::-webkit-details-marker {
        display: none;
    }

    .mobile-toc-nav {
        margin-top: 1rem;
    }

    .mobile-toc-nav ul,
    .mobile-toc-nav .toc-list {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .mobile-toc-nav li,
    .mobile-toc-nav .toc-item {
        margin: 0.5rem 0;
    }

    .mobile-toc-nav .toc-item {
        padding-left: calc(1rem * var(--depth, 0));
    }

    .mobile-toc-nav a {
        color: var(--color-text-muted);
        text-decoration: none;
        font-size: var(--font-size-md);
        line-height: 1.4;
    }

    .mobile-toc-nav a:hover {
        color: var(--color-primary);
        text-decoration: underline;
    }

    /* 保持原有的内容样式 */
    .post-content h2 {
        color: var(--color-text-primary);
        margin: var(--spacing-xl) 0 var(--spacing-md) 0;
        font-size: var(--font-size-2xl);
        font-weight: 500;
    }

    .post-content h3 {
        color: var(--color-text-secondary);
        margin: var(--spacing-lg) 0 var(--spacing-md) 0;
        font-size: var(--font-size-xl);
        font-weight: 500;
    }

    .post-content p {
        margin-bottom: var(--spacing-md);
    }

    .post-content a {
        color: var(--color-primary);
        text-decoration: underline;
    }

    .post-content a:hover {
        color: var(--color-primary-hover);
    }

    .post-content code {
        background-color: var(--color-bg-white);
        padding: var(--spacing-xs) var(--spacing-sm);
        border-radius: var(--radius-small);
        font-family: 'Monaco', 'Consolas', monospace;
        font-size: var(--font-size-md);
        box-shadow: var(--shadow-light);
        border: 1px solid var(--color-border-light);
    }

    .post-content pre {
        background-color: var(--color-bg-white);
        padding: var(--spacing-lg);
        border-radius: var(--radius-medium);
        overflow-x: auto;
        margin: var(--spacing-lg) 0;
        border-left: 4px solid var(--color-primary);
        box-shadow: var(--shadow-light);
        border: 1px solid var(--color-border-light);
    }

    .post-content pre code {
        background: none;
        padding: 0;
        box-shadow: none;
        border: none;
    }

    .post-content blockquote {
        border-left: 4px solid var(--color-primary);
        margin: var(--spacing-lg) 0;
        font-style: italic;
        color: var(--color-text-subtle);
        background: var(--color-bg-white);
        padding: var(--spacing-lg) var(--spacing-lg) var(--spacing-lg) var(--spacing-xl);
        border-radius: var(--radius-medium);
        box-shadow: var(--shadow-light);
        border: 1px solid var(--color-border-light);
        border-left: 4px solid var(--color-primary);
    }

    .post-content ul,
    .post-content ol {
        margin-left: var(--spacing-xl);
        margin-bottom: var(--spacing-md);
    }

    .post-content li {
        margin-bottom: var(--spacing-sm);
    }

    @media (max-width: 768px) {
        .post-title {
            font-size: var(--font-size-3xl);
        }

        .post-content {
            font-size: var(--font-size-base);
        }

        .post-content h2 {
            font-size: var(--font-size-lg);
        }

        .post-content h3 {
            font-size: var(--font-size-xl);
        }
    }



    /* Environment 环境样式 */
    .environment {
        margin: var(--spacing-lg) 0;
        border-left: 4px solid var(--color-text-muted);
        padding: 0;
    }

    .environment-header {
        padding: var(--spacing-sm) var(--spacing-md);
        font-weight: 600;
        color: var(--color-text-muted);
        font-size: var(--font-size-sm);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .environment-body {
        padding: var(--spacing-md);
    }

    .environment-body p:last-child {
        margin-bottom: 0;
    }

    /* 深色模式下 SVG 反色 */
    .dark .typst-doc {
        filter: invert(1) hue-rotate(180deg);
    }
</style>

<script webc:bucket="defer">
    // 初始化目录导航功能
    const sections = document.querySelectorAll('.post-section[aria-labelledby]');
    const tocItems = document.querySelectorAll('.toc-nav .toc-item'); // 只选择桌面版目录
    const visibleSections = new Set();

    // 处理目录激活状态
    const updateTocStates = () => {
        for (let i = 0; i < tocItems.length; i++) {
            const item = tocItems[i];
            item.removeAttribute('data-active');
            const id = item.children[0].getAttribute('href').substring(1);
            console.log('Visible sections:', visibleSections);
            if (visibleSections.has(id)) {
                item.setAttribute('data-active', 'current');
                // 如果是激活状态，标记父节点
                const currentDepth = parseInt(item.style.getPropertyValue('--depth') || '0');
                let lastDepth = currentDepth;
                for (let j = i - 1; j >= 0; j--) {
                    const itemDepth = parseInt(tocItems[j].style.getPropertyValue('--depth') || '0');
                    if (itemDepth < lastDepth) {
                        tocItems[j].setAttribute('data-active', 'parent');
                        lastDepth = itemDepth;
                    }
                }
            }
        }
    };

    // 观察器
    const observer = new IntersectionObserver((entries) => {
        for (const entry of entries) {
            const headingId = entry.target.getAttribute('aria-labelledby');
            entry.isIntersecting ? visibleSections.add(headingId) : visibleSections.delete(headingId);
        }
        updateTocStates();
    }, {
        threshold: 0,
    });

    // 启动
    sections.forEach(section => observer.observe(section));
    document.querySelectorAll('.toc-nav a').forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            document.getElementById(link.href.split('#')[1])?.scrollIntoView({ behavior: 'smooth' });
        });
    });
</script>